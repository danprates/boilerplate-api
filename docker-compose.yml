version: '3.1'

volumes:
  boilerplate-postgres:
  # boilerplate-mongo:

networks:
  base:

services:
  api:
    container_name: boilerplate-api
    image: node:14
    working_dir: /usr/src/app
    restart: always
    env_file: .env
    command: bash -c "npm i && npm run dev"
    volumes:
      - ./package.json:/usr/src/app/package.json
      - ./.:/usr/src/app/
    ports:
      - "3000:3000"
      - "9222:9222"
    networks:
      - base

  postgres:
    image: postgres:alpine
    container_name: boilerplate-postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - boilerplate-postgres:/var/lib/postgresql/data
    networks:
      - base
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: boilerplate

  pgadmin:
    image: dpage/pgadmin4
    container_name: boilerplate-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@docker.com'
      PGADMIN_DEFAULT_PASSWORD: 'docker'
    ports:
      - 8000:80
    depends_on:
      - postgres
    networks:
      - base

  # mongo:
  #   container_name: boilerplate-mongodb
  #   image: mongo
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: docker
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: docker
  #   volumes:
  #     - boilerplate-mongo:/var/opt/mongo/data
  #   networks:
  #     - base

  # mongo-express:
  #   container_name: mongo-express
  #   image: mongo-express
  #   ports:
  #     - 9000:8081
  #   environment:
  #     ME_CONFIG_BASICAUTH_USERNAME: docker
  #     ME_CONFIG_BASICAUTH_PASSWORD: docker
  #   depends_on:
  #     - mongo
  #   networks:
  #     - base
